services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.dashboard.address=:8080"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - is_schedule_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`localhost`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=dashboard"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_LISTEN_ADDRESSES=*
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      start_period: 4s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - is_schedule_network
    labels:
      - "traefik.enable=false"

  backend:
    volumes:
      - ./backend:/app
    build:
      dockerfile: backend.Dockerfile
    env_file:
      - .env
    command:
      - "gunicorn"
      - "timetable.wsgi:application"
      - "--bind"
      - "0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - is_schedule_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: "${REACT_APP_API_URL}"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost/api/}
    networks:
      - is_schedule_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

networks:
  is_schedule_network:
    driver: bridge

volumes:
  postgres_data: