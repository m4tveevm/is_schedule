services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--accesslog=true"
      - "--accesslog.filepath=/logs/access.log"
      - "--accesslog.filters.statusCodes=400-499"
      - "experimental.plugins.traefikkeycloak.modulename=github.com/paladium/traefikkeycloak"
      - "experimental.plugins.traefikkeycloak.version=v1.11"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs:/logs
    networks:
      - app_network

  backend:
    image: ghcr.io/m4tveevm/backend:latest
    environment:
      - SECRET_KEY=/run/secrets/django_secret
      - DJANGO_DB_HOST=db
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=postgres
      - DJANGO_DB_PASSWORD=/run/secrets/pg_password
    depends_on:
      - db
    networks:
      - app_network
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  frontend:
    image: ghcr.io/m4tveevm/frontend:latest
    environment:
      - REACT_APP_BACKEND_URL=http://localhost/api/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - app_network
    deploy:
      replicas: 2

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=/run/secrets/pg_password
    networks:
      - app_network
    deploy:
      restart_policy:
        condition: any

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: