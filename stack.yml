services:
  backend:
    image: ghcr.io/m4tveevm/is_schedule-backend:latest
    environment:
      - DJANGO_DB_HOST=is_schedule_db
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=postgres
      - DJANGO_ALLOWED_HOSTS=is-schedule.updspace.com,localhost
      - CSRF_TRUSTED_ORIGINS=https://is-schedule.updspace.com
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_password
      - DJANGO_SECRET_FILE=/run/secrets/django_secret
    entrypoint: >
      sh -c "
        export POSTGRES_PASSWORD=$$(cat /run/secrets/pg_password);
        exec gunicorn timetable.wsgi:application --bind 0.0.0.0:8000 --workers=3
      "
    networks:
      - net_public
      - is_net
    secrets:
      - pg_password
      - django_secret
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        order: start-first
      labels:
        traefik.enable: "true"
        traefik.http.routers.is_schedule-backend.rule: Host(`is-schedule.updspace.com`) && PathPrefix(`/api`)
        traefik.http.routers.is_schedule-backend.entrypoints: websecure
        traefik.http.routers.is_schedule-backend.tls: "true"
        traefik.http.services.is_schedule-backend.loadbalancer.server.port: "8000"

  frontend:
    image: ghcr.io/m4tveevm/is_schedule-frontend:latest
    environment:
      - REACT_APP_API_URL=https://is-schedule.updspace.com/api/
    networks:
      - net_public
      - is_net
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        traefik.enable: "true"
        traefik.http.routers.is_schedule-frontend.rule: Host(`is-schedule.updspace.com`)
        traefik.http.routers.is_schedule-frontend.entrypoints: websecure
        traefik.http.routers.is_schedule-frontend.tls: "true"
        traefik.http.services.is_schedule-frontend.loadbalancer.server.port: "80"

  pg15:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_LISTEN_ADDRESSES=*
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_password
    secrets:
      - pg_password
    networks:
      is_net:
        aliases:
          - is_schedule_db
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      traefik.enable: "false"

networks:
  net_public:
    external: true
  is_net:
    driver: overlay
    attachable: true

volumes:
  postgres_data:

secrets:
  pg_password:
    external: true
  django_secret:
    external: true
